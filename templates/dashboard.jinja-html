{% extends 'layout.html' %} {% block body %}
<div class="container d-flex flex-wrap flex-column mt-4">
  <h1 name="welcome">Welcome back, <span class="fw-bold text-capitalize">{{ username }} </span>!</h1>
  <div class="mt-2">
    <h2 class="chart-heading">
      Here is your Financial Summary as of {{ date }}
    </h2>
    <div class="finances d-flex flex-column flex-md-row justify-content-center mt-2" id="finances">
      <div class="chart-container mt-1">
        <canvas id="doughnut-chart"></canvas>
      </div>
      <div class="grid row-gap-3 d-flex flex-column justify-content-evenly mt-4">
        <!-- log a new entry button -->
        <button class="btn btn-outline-primary" type="button" data-bs-toggle="modal" data-bs-target="#log-entry-modal">
          Log A New Entry
        </button>
        <!-- behavior for logging a new entry defined -->
        <div class="modal" id="log-entry-modal" tabindex="-1" aria-labelledby="test-label" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="test-label">Log A New Entry</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <form id="entry-form" method="post" action="{{ url_for('dashboard') }}">
                  <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
                  <div class="grid row-cols-1 row-gap-3">
                    <label for="category-select">Transaction Type:</label>
                    <select class="form-control custom-select mb-2" name="category-select" id="category-select">
                      <!-- category -->
                      <ul class="options">
                        <li>
                          <option class="disabled" hidden>Choose a transaction type...</option>
                        </li>
                        <li>
                          <option value="purchase">
                        </li>
                        I bought or spent on something
                        </option>
                        <li>
                          <option value="sell">I sold something</option>
                        </li>
                        <li>
                          <option value="income">I earned some money</option>
                        </li>
                        <li>
                          <option value="invest">
                        </li>
                        I invested in some stocks/bonds/etc
                        </option>
                        <option value="debt">I took out a loan</option>
                      </ul>
                    </select>
                    <div class="grid row-cols-1 row-gap-3" id="second-select-container" style="display: none">
                      <label for="second-select">Select Transaction:</label>
                      <select class="form-control mb-2" name="second-select" id="second-select">
                        <!-- transactions -->
                      </select>
                    </div>
                    <div class="grid row-cols-1 row-gap-3" id="transact-amount-container" style="display: none">
                      <label for="transact-amount">Amount:</label>
                      <input type="number" name="transact-amount" id="transact-amount" />
                    </div>
                    <div id="save-success" class="text-center alert alert-success" style="display: none">
                      Save successful! Closing window.
                    </div>
                    <div id="save-error" class="text-center alert alert-danger" style="display: none">
                      Save error!
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal">
                      Close
                    </button>
                    <button type="submit" class="btn btn-primary">
                      Save changes
                    </button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
        <!-- table breakdown button -->
        <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#table-modal" type="button"
          id="table-breakdown">
          View Table Breakdown
        </button>
        <!-- behavior for getting table breakdown defined -->
        <div class="modal" id="table-modal" tabindex="-1" aria-labelledby="test-label-2" aria-hidden="true">
          <div class="modal-dialog">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="test-label-2">Transaction Breakdown</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                {% for category in categories %}
                <div>
                  <table id="breakdown-table" class="table table-bordered table-hover">
                    <h1 class="custom-table-title font20">{{ category }}</h1>
                    <thead class="text-center">
                      <tr>
                        {% for header in table_headers %}
                        {% if header == 'transaction_date' %}
                        <th class="col">Date</th>
                        {% elif header != 'category' %}
                        <th class="col">{{ header.replace('_', ' ').title() }}</th>
                        {% endif %}
                        {% endfor %}
                      </tr>
                    </thead>
                    <tbody>
                      {% for items in transact_data %}
                      {% if items['category'] in category %}
                      <tr>
                        {% for key in table_headers %}
                        {% if key != 'category' %}
                        {% if key == 'amount' %}
                        <td class="align-right">{{ items[key] }}</td>
                        {% elif key == 'transaction_date' %}
                        <td class="text-center">{{ items[key].strftime('%b-%d-%Y') }}</td>
                        {% else %}
                        <td>{{ items[key] }}</td>
                        {% endif %}
                        {% endif %}
                        {% endfor %}
                      </tr>
                      {% endif %}
                      {% endfor %}
                    </tbody>
                  </table>
                </div>
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
        <button class="btn btn-outline-primary disabled" type="button">
          Create A Goal
        </button>
        <button class="btn btn-outline-primary" type="button" disabled>
          Get Insights
        </button>
      </div>
    </div>
  </div>
  <div class="mt-5">
    <h2 class="chart-heading">Your Month-on-Month Financial Activity</h2>
    <div class="d-flex flex-column flex-md-row justify-content-center mt-2" id="finances">
      <div class="chart-container mt-1">
        <canvas id="my-bar-chart"></canvas>
      </div>

      <div class="grid row-gap-3 d-flex flex-column justify-content-evenly mt-4">
        <button class="btn btn-outline-primary disabled" type="button">
          Generate YTD Financials
        </button>
        <button class="btn btn-outline-primary disabled" type="button">
          View Monthly Breakdown
        </button>
        <button class="btn btn-outline-primary" type="button" disabled>
          Generate Forecast
        </button>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    const doughnutCtx = document.getElementById("doughnut-chart").getContext("2d");
    const doughnutChart = new Chart(doughnutCtx, {
      type: "doughnut",
      data: {
        labels: {{ labels | safe }},
    datasets: [
      {
        label: "Amount",
        data: {{ values | safe }},
      backgroundColor: [
        '#e3242b',
        '#feba4f',
        '#03c04a',
        '#aef359',
        '#0492c2'
      ],
      borderWidth: 5,
      hoverBorderWidth: 0,
      borderRadius: 5,
              }
    ]
        },
    });

    const myBarChart = document.getElementById("my-bar-chart");
    const months = {{ months | safe
    }};
    const income_data = {{ income | safe }};
    const sell_data = {{ sell | safe }};
    const expense_data = {{ expense | safe }};

    new Chart(myBarChart, {
      type: "bar",
      data: {
        labels: months,
        datasets: [
          {
            label: "Income",
            data: income_data,
            backgroundColor: "#03c04a",
          },
          {
            label: "Sold",
            data: sell_data,
            backgroundColor: "#B6D0E2"
          },
          {
            label: "Expenses",
            data: expense_data,
            backgroundColor: "#e3242b",
          },
        ],
      },
      options: {
        scales: {
          x: {
            ticks: {
              callback: (value, index) => months[index],
            },
          },
          y: {
            beginAtZero: true,
          },
        },
      },
    });
  </script>
</div>
{% endblock %}